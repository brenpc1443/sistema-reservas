<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="16" tests="32" time="0.0">
	<testsuite disabled="0" errors="0" failures="15" name="terraform scan" skipped="0" tests="31" time="0">
		<properties>
			<property name="directory" value="['/tf']"/>
			<property name="add_check" value="False"/>
			<property name="list" value="False"/>
			<property name="output" value="['junitxml']"/>
			<property name="output_file_path" value="results.xml"/>
			<property name="output_bc_ids" value="False"/>
			<property name="include_all_checkov_policies" value="True"/>
			<property name="quiet" value="False"/>
			<property name="compact" value="False"/>
			<property name="framework" value="['all']"/>
			<property name="skip_framework" value="[]"/>
			<property name="run_all_external_checks" value="False"/>
			<property name="soft_fail" value="False"/>
			<property name="skip_results_upload" value="False"/>
			<property name="repo_id" value="cli_repo/tf"/>
			<property name="branch" value="master"/>
			<property name="skip_download" value="False"/>
			<property name="use_enforcement_rules" value="False"/>
			<property name="external_modules_download_path" value=".external_modules"/>
			<property name="evaluate_variables" value="True"/>
			<property name="no_cert_verify" value="False"/>
			<property name="create_baseline" value="False"/>
			<property name="output_baseline_as_skipped" value="False"/>
			<property name="secrets_scan_file_type" value="[]"/>
			<property name="enable_secret_scan_all_files" value="False"/>
			<property name="block_list_secret_scan" value="[]"/>
			<property name="summary_position" value="top"/>
			<property name="skip_resources_without_violations" value="False"/>
			<property name="deep_analysis" value="False"/>
			<property name="no_fail_on_crash" value="False"/>
			<property name="mask" value="defaultdict(&lt;class 'set'&gt;, {})"/>
			<property name="scan_secrets_history" value="False"/>
			<property name="secrets_history_timeout" value="12h"/>
			<property name="custom_tool_name" value="Checkov"/>
		</properties>
		<testcase name="[NONE][CKV_AWS_41] Ensure no hard coded AWS access key and secret key exists in provider" classname="/main.tf.aws.default" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_93] Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)" classname="/tf/s3-cloudfront/main.tf.aws_s3_bucket.frontend" file="/tf/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/tf/vpc/main.tf.aws_subnet.private[0]" file="/tf/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="/tf/vpc/main.tf.aws_security_group.alb" file="/tf/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="/tf/vpc/main.tf.aws_security_group.alb" file="/tf/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="/tf/vpc/main.tf.aws_security_group.alb" file="/tf/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/tf/vpc/main.tf.aws_subnet.private[1]" file="/tf/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_57] S3 Bucket has an ACL defined which allows public WRITE access." classname="/tf/s3-cloudfront/main.tf.aws_s3_bucket.frontend" file="/tf/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_20] S3 Bucket has an ACL defined which allows public READ access." classname="/tf/s3-cloudfront/main.tf.aws_s3_bucket.frontend" file="/tf/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_44] Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic" classname="/tf/vpc/main.tf.aws_route_table.public" file="/tf/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_44] Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic" classname="/tf/vpc/main.tf.aws_route_table.private[0]" file="/tf/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_44] Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic" classname="/tf/vpc/main.tf.aws_route_table.private[1]" file="/tf/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_19] Ensure all data stored in the S3 bucket is securely encrypted at rest" classname="/tf/s3-cloudfront/main.tf.aws_s3_bucket.frontend" file="/tf/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_35] AWS NAT Gateways should be utilized for the default route" classname="/tf/vpc/main.tf.aws_route_table.public" file="/tf/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_35] AWS NAT Gateways should be utilized for the default route" classname="/tf/vpc/main.tf.aws_route_table.private[0]" file="/tf/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_35] AWS NAT Gateways should be utilized for the default route" classname="/tf/vpc/main.tf.aws_route_table.private[1]" file="/tf/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/tf/vpc/main.tf.aws_subnet.public[0]" file="/tf/vpc/main.tf">
			<failure type="failure" message="Ensure VPC subnets do not assign public IP by default">
Resource: aws_subnet.public[0]
File: /tf/vpc/main.tf: 22-34
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-vpc-subnets-do-not-assign-public-ip-by-default

		22 | resource &quot;aws_subnet&quot; &quot;public&quot; {
		23 |   count                   = 2
		24 |   vpc_id                  = aws_vpc.main.id
		25 |   cidr_block              = cidrsubnet(var.vpc_cidr, 8, count.index)
		26 |   availability_zone       = data.aws_availability_zones.available.names[count.index]
		27 |   map_public_ip_on_launch = true
		28 | 
		29 |   tags = {
		30 |     Name        = &quot;${var.project_name}-${var.environment}-public-${count.index + 1}&quot;
		31 |     Environment = var.environment
		32 |     Type        = &quot;public&quot;
		33 |   }
		34 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="/tf/vpc/main.tf.aws_security_group.alb" file="/tf/vpc/main.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: aws_security_group.alb
File: /tf/vpc/main.tf: 85-115
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		85  | resource &quot;aws_security_group&quot; &quot;alb&quot; {
		86  |   name        = &quot;${var.project_name}-${var.environment}-alb-sg&quot;
		87  |   description = &quot;Security group for ALB&quot;
		88  |   vpc_id      = aws_vpc.main.id
		89  | 
		90  |   ingress {
		91  |     from_port   = 80
		92  |     to_port     = 80
		93  |     protocol    = &quot;tcp&quot;
		94  |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		95  |   }
		96  | 
		97  |   ingress {
		98  |     from_port   = 443
		99  |     to_port     = 443
		100 |     protocol    = &quot;tcp&quot;
		101 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		102 |   }
		103 | 
		104 |   egress {
		105 |     from_port   = 0
		106 |     to_port     = 0
		107 |     protocol    = &quot;-1&quot;
		108 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		109 |   }
		110 | 
		111 |   tags = {
		112 |     Name        = &quot;${var.project_name}-${var.environment}-alb-sg&quot;
		113 |     Environment = var.environment
		114 |   }
		115 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="/tf/vpc/main.tf.aws_security_group.alb" file="/tf/vpc/main.tf">
			<failure type="failure" message="Ensure no security groups allow ingress from 0.0.0.0:0 to port 80">
Resource: aws_security_group.alb
File: /tf/vpc/main.tf: 85-115
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80

		85  | resource &quot;aws_security_group&quot; &quot;alb&quot; {
		86  |   name        = &quot;${var.project_name}-${var.environment}-alb-sg&quot;
		87  |   description = &quot;Security group for ALB&quot;
		88  |   vpc_id      = aws_vpc.main.id
		89  | 
		90  |   ingress {
		91  |     from_port   = 80
		92  |     to_port     = 80
		93  |     protocol    = &quot;tcp&quot;
		94  |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		95  |   }
		96  | 
		97  |   ingress {
		98  |     from_port   = 443
		99  |     to_port     = 443
		100 |     protocol    = &quot;tcp&quot;
		101 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		102 |   }
		103 | 
		104 |   egress {
		105 |     from_port   = 0
		106 |     to_port     = 0
		107 |     protocol    = &quot;-1&quot;
		108 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		109 |   }
		110 | 
		111 |   tags = {
		112 |     Name        = &quot;${var.project_name}-${var.environment}-alb-sg&quot;
		113 |     Environment = var.environment
		114 |   }
		115 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="/tf/vpc/main.tf.aws_security_group.alb" file="/tf/vpc/main.tf">
			<failure type="failure" message="Ensure every security group and rule has a description">
Resource: aws_security_group.alb
File: /tf/vpc/main.tf: 85-115
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		85  | resource &quot;aws_security_group&quot; &quot;alb&quot; {
		86  |   name        = &quot;${var.project_name}-${var.environment}-alb-sg&quot;
		87  |   description = &quot;Security group for ALB&quot;
		88  |   vpc_id      = aws_vpc.main.id
		89  | 
		90  |   ingress {
		91  |     from_port   = 80
		92  |     to_port     = 80
		93  |     protocol    = &quot;tcp&quot;
		94  |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		95  |   }
		96  | 
		97  |   ingress {
		98  |     from_port   = 443
		99  |     to_port     = 443
		100 |     protocol    = &quot;tcp&quot;
		101 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		102 |   }
		103 | 
		104 |   egress {
		105 |     from_port   = 0
		106 |     to_port     = 0
		107 |     protocol    = &quot;-1&quot;
		108 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		109 |   }
		110 | 
		111 |   tags = {
		112 |     Name        = &quot;${var.project_name}-${var.environment}-alb-sg&quot;
		113 |     Environment = var.environment
		114 |   }
		115 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/tf/vpc/main.tf.aws_subnet.public[1]" file="/tf/vpc/main.tf">
			<failure type="failure" message="Ensure VPC subnets do not assign public IP by default">
Resource: aws_subnet.public[1]
File: /tf/vpc/main.tf: 22-34
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-vpc-subnets-do-not-assign-public-ip-by-default

		22 | resource &quot;aws_subnet&quot; &quot;public&quot; {
		23 |   count                   = 2
		24 |   vpc_id                  = aws_vpc.main.id
		25 |   cidr_block              = cidrsubnet(var.vpc_cidr, 8, count.index)
		26 |   availability_zone       = data.aws_availability_zones.available.names[count.index]
		27 |   map_public_ip_on_launch = true
		28 | 
		29 |   tags = {
		30 |     Name        = &quot;${var.project_name}-${var.environment}-public-${count.index + 1}&quot;
		31 |     Environment = var.environment
		32 |     Type        = &quot;public&quot;
		33 |   }
		34 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="/tf/vpc/main.tf.aws_security_group.alb" file="/tf/vpc/main.tf">
			<failure type="failure" message="Ensure that Security Groups are attached to another resource">
Resource: aws_security_group.alb
File: /tf/vpc/main.tf: 85-115
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		85  | resource &quot;aws_security_group&quot; &quot;alb&quot; {
		86  |   name        = &quot;${var.project_name}-${var.environment}-alb-sg&quot;
		87  |   description = &quot;Security group for ALB&quot;
		88  |   vpc_id      = aws_vpc.main.id
		89  | 
		90  |   ingress {
		91  |     from_port   = 80
		92  |     to_port     = 80
		93  |     protocol    = &quot;tcp&quot;
		94  |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		95  |   }
		96  | 
		97  |   ingress {
		98  |     from_port   = 443
		99  |     to_port     = 443
		100 |     protocol    = &quot;tcp&quot;
		101 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		102 |   }
		103 | 
		104 |   egress {
		105 |     from_port   = 0
		106 |     to_port     = 0
		107 |     protocol    = &quot;-1&quot;
		108 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		109 |   }
		110 | 
		111 |   tags = {
		112 |     Name        = &quot;${var.project_name}-${var.environment}-alb-sg&quot;
		113 |     Environment = var.environment
		114 |   }
		115 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_62] Ensure S3 buckets should have event notifications enabled" classname="/tf/s3-cloudfront/main.tf.aws_s3_bucket.frontend" file="/tf/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure S3 buckets should have event notifications enabled">
Resource: aws_s3_bucket.frontend
File: /tf/s3-cloudfront/main.tf: 2-10
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62

		2  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		3  |   bucket = &quot;${var.project_name}-${var.environment}-frontend&quot;
		4  | 
		5  |   tags = {
		6  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		7  |     Environment = var.environment
		8  |     Project     = var.project_name
		9  |   }
		10 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_6] Ensure that S3 bucket has a Public Access block" classname="/tf/s3-cloudfront/main.tf.aws_s3_bucket.frontend" file="/tf/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure that S3 bucket has a Public Access block">
Resource: aws_s3_bucket.frontend
File: /tf/s3-cloudfront/main.tf: 2-10
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached

		2  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		3  |   bucket = &quot;${var.project_name}-${var.environment}-frontend&quot;
		4  | 
		5  |   tags = {
		6  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		7  |     Environment = var.environment
		8  |     Project     = var.project_name
		9  |   }
		10 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_21] Ensure all data stored in the S3 bucket have versioning enabled" classname="/tf/s3-cloudfront/main.tf.aws_s3_bucket.frontend" file="/tf/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure all data stored in the S3 bucket have versioning enabled">
Resource: aws_s3_bucket.frontend
File: /tf/s3-cloudfront/main.tf: 2-10
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning

		2  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		3  |   bucket = &quot;${var.project_name}-${var.environment}-frontend&quot;
		4  | 
		5  |   tags = {
		6  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		7  |     Environment = var.environment
		8  |     Project     = var.project_name
		9  |   }
		10 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_144] Ensure that S3 bucket has cross-region replication enabled" classname="/tf/s3-cloudfront/main.tf.aws_s3_bucket.frontend" file="/tf/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure that S3 bucket has cross-region replication enabled">
Resource: aws_s3_bucket.frontend
File: /tf/s3-cloudfront/main.tf: 2-10
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled

		2  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		3  |   bucket = &quot;${var.project_name}-${var.environment}-frontend&quot;
		4  | 
		5  |   tags = {
		6  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		7  |     Environment = var.environment
		8  |     Project     = var.project_name
		9  |   }
		10 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_11] Ensure VPC flow logging is enabled in all VPCs" classname="/tf/vpc/main.tf.aws_vpc.main" file="/tf/vpc/main.tf">
			<failure type="failure" message="Ensure VPC flow logging is enabled in all VPCs">
Resource: aws_vpc.main
File: /tf/vpc/main.tf: 1-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-9-enable-vpc-flow-logging

		1  | resource &quot;aws_vpc&quot; &quot;main&quot; {
		2  |   cidr_block           = var.vpc_cidr
		3  |   enable_dns_hostnames = true
		4  |   enable_dns_support   = true
		5  | 
		6  |   tags = {
		7  |     Name        = &quot;${var.project_name}-${var.environment}-vpc&quot;
		8  |     Environment = var.environment
		9  |     Project     = var.project_name
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_12] Ensure the default security group of every VPC restricts all traffic" classname="/tf/vpc/main.tf.aws_vpc.main" file="/tf/vpc/main.tf">
			<failure type="failure" message="Ensure the default security group of every VPC restricts all traffic">
Resource: aws_vpc.main
File: /tf/vpc/main.tf: 1-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-4

		1  | resource &quot;aws_vpc&quot; &quot;main&quot; {
		2  |   cidr_block           = var.vpc_cidr
		3  |   enable_dns_hostnames = true
		4  |   enable_dns_support   = true
		5  | 
		6  |   tags = {
		7  |     Name        = &quot;${var.project_name}-${var.environment}-vpc&quot;
		8  |     Environment = var.environment
		9  |     Project     = var.project_name
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_145] Ensure that S3 buckets are encrypted with KMS by default" classname="/tf/s3-cloudfront/main.tf.aws_s3_bucket.frontend" file="/tf/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure that S3 buckets are encrypted with KMS by default">
Resource: aws_s3_bucket.frontend
File: /tf/s3-cloudfront/main.tf: 2-10
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		2  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		3  |   bucket = &quot;${var.project_name}-${var.environment}-frontend&quot;
		4  | 
		5  |   tags = {
		6  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		7  |     Environment = var.environment
		8  |     Project     = var.project_name
		9  |   }
		10 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_18] Ensure the S3 bucket has access logging enabled" classname="/tf/s3-cloudfront/main.tf.aws_s3_bucket.frontend" file="/tf/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure the S3 bucket has access logging enabled">
Resource: aws_s3_bucket.frontend
File: /tf/s3-cloudfront/main.tf: 2-10
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging

		2  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		3  |   bucket = &quot;${var.project_name}-${var.environment}-frontend&quot;
		4  | 
		5  |   tags = {
		6  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		7  |     Environment = var.environment
		8  |     Project     = var.project_name
		9  |   }
		10 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_61] Ensure that an S3 bucket has a lifecycle configuration" classname="/tf/s3-cloudfront/main.tf.aws_s3_bucket.frontend" file="/tf/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure that an S3 bucket has a lifecycle configuration">
Resource: aws_s3_bucket.frontend
File: /tf/s3-cloudfront/main.tf: 2-10
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61

		2  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		3  |   bucket = &quot;${var.project_name}-${var.environment}-frontend&quot;
		4  | 
		5  |   tags = {
		6  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		7  |     Environment = var.environment
		8  |     Project     = var.project_name
		9  |   }
		10 | }
</failure>
		</testcase>
	</testsuite>
	<testsuite disabled="0" errors="0" failures="1" name="secrets scan" skipped="0" tests="1" time="0">
		<properties>
			<property name="directory" value="['/tf']"/>
			<property name="add_check" value="False"/>
			<property name="list" value="False"/>
			<property name="output" value="['junitxml']"/>
			<property name="output_file_path" value="results.xml"/>
			<property name="output_bc_ids" value="False"/>
			<property name="include_all_checkov_policies" value="True"/>
			<property name="quiet" value="False"/>
			<property name="compact" value="False"/>
			<property name="framework" value="['all']"/>
			<property name="skip_framework" value="[]"/>
			<property name="run_all_external_checks" value="False"/>
			<property name="soft_fail" value="False"/>
			<property name="skip_results_upload" value="False"/>
			<property name="repo_id" value="cli_repo/tf"/>
			<property name="branch" value="master"/>
			<property name="skip_download" value="False"/>
			<property name="use_enforcement_rules" value="False"/>
			<property name="external_modules_download_path" value=".external_modules"/>
			<property name="evaluate_variables" value="True"/>
			<property name="no_cert_verify" value="False"/>
			<property name="create_baseline" value="False"/>
			<property name="output_baseline_as_skipped" value="False"/>
			<property name="secrets_scan_file_type" value="[]"/>
			<property name="enable_secret_scan_all_files" value="False"/>
			<property name="block_list_secret_scan" value="[]"/>
			<property name="summary_position" value="top"/>
			<property name="skip_resources_without_violations" value="False"/>
			<property name="deep_analysis" value="False"/>
			<property name="no_fail_on_crash" value="False"/>
			<property name="mask" value="defaultdict(&lt;class 'set'&gt;, {})"/>
			<property name="scan_secrets_history" value="False"/>
			<property name="secrets_history_timeout" value="12h"/>
			<property name="custom_tool_name" value="Checkov"/>
		</properties>
		<testcase name="[NONE][CKV_SECRET_6] Base64 High Entropy String" classname="/Docker/docker-compose.dev.yml.cbfdac6008f9cab4083784cbd1874f76618d2a97" file="/Docker/docker-compose.dev.yml">
			<failure type="failure" message="Base64 High Entropy String">
Resource: cbfdac6008f9cab4083784cbd1874f76618d2a97
File: /Docker/docker-compose.dev.yml: 12-13
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/secrets-policies/secrets-policy-index/git-secrets-6

		12 |       POSTGRES_PASSWORD: pa**********
</failure>
		</testcase>
	</testsuite>
</testsuites>
