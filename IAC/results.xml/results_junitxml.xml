<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="62" tests="270" time="0.0">
	<testsuite disabled="0" errors="0" failures="62" name="terraform scan" skipped="0" tests="270" time="0">
		<properties>
			<property name="directory" value="['/tf']"/>
			<property name="add_check" value="False"/>
			<property name="list" value="False"/>
			<property name="output" value="['junitxml']"/>
			<property name="output_file_path" value="results.xml"/>
			<property name="output_bc_ids" value="False"/>
			<property name="include_all_checkov_policies" value="True"/>
			<property name="quiet" value="False"/>
			<property name="compact" value="False"/>
			<property name="framework" value="['all']"/>
			<property name="skip_framework" value="[]"/>
			<property name="run_all_external_checks" value="False"/>
			<property name="soft_fail" value="False"/>
			<property name="skip_results_upload" value="False"/>
			<property name="repo_id" value="cli_repo/tf"/>
			<property name="branch" value="master"/>
			<property name="skip_download" value="False"/>
			<property name="use_enforcement_rules" value="False"/>
			<property name="external_modules_download_path" value=".external_modules"/>
			<property name="evaluate_variables" value="True"/>
			<property name="no_cert_verify" value="False"/>
			<property name="create_baseline" value="False"/>
			<property name="output_baseline_as_skipped" value="False"/>
			<property name="secrets_scan_file_type" value="[]"/>
			<property name="enable_secret_scan_all_files" value="False"/>
			<property name="block_list_secret_scan" value="[]"/>
			<property name="summary_position" value="top"/>
			<property name="skip_resources_without_violations" value="False"/>
			<property name="deep_analysis" value="False"/>
			<property name="no_fail_on_crash" value="False"/>
			<property name="mask" value="defaultdict(&lt;class 'set'&gt;, {})"/>
			<property name="scan_secrets_history" value="False"/>
			<property name="secrets_history_timeout" value="12h"/>
			<property name="custom_tool_name" value="Checkov"/>
		</properties>
		<testcase name="[NONE][CKV_AWS_41] Ensure no hard coded AWS access key and secret key exists in provider" classname="/main.tf.aws.default" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_386] Reduce potential for WhoAMI cloud image name confusion attack" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_ami.amazon_linux_2" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_93] Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket.alb_logs" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_54] Ensure S3 bucket has block public policy enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket_public_access_block.alb_logs" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_55] Ensure S3 bucket has ignore public ACLs enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket_public_access_block.alb_logs" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_53] Ensure S3 bucket has block public ACLS enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket_public_access_block.alb_logs" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_56] Ensure S3 bucket has 'restrict_public_buckets' enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket_public_access_block.alb_logs" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_93] Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket_policy.alb_logs" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_70] Ensure S3 bucket does not allow an action with any Principal" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket_policy.alb_logs" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_91] Ensure the ELBv2 (Application/Network) has access logging enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb.main" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_328] Ensure that ALB is configured with defensive or strictest desync mitigation mode" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb.main" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_131] Ensure that ALB drops HTTP headers" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb.main" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_261] Ensure HTTP HTTPS Target group defines Healthcheck" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb_target_group.monolith" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_341] Ensure Launch template should not have a metadata response hop limit greater than 1" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_launch_template.monolith" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_79] Ensure Instance Metadata Service Version 1 is not enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_launch_template.monolith" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_88] EC2 instance should not have public IP." classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_launch_template.monolith" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_46] Ensure no hard-coded secrets exist in EC2 user data" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_launch_template.monolith" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_153] Autoscaling groups should supply tags to launch configurations" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_autoscaling_group.monolith" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_315] Ensure EC2 Auto Scaling groups use EC2 launch templates" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_autoscaling_group.monolith" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_319] Ensure that CloudWatch alarm actions are enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_cloudwatch_metric_alarm.cpu_high" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_319] Ensure that CloudWatch alarm actions are enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_cloudwatch_metric_alarm.cpu_low" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_61] Ensure AWS IAM policy does not allow assume role permission across all services" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role.ec2_role" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role.ec2_role" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_60] Ensure IAM role allows only specific services or principals to assume it" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role.ec2_role" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_289] Ensure IAM policies does not allow permissions management / resource exposure without constraints" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sqs_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_63] Ensure no IAM policies documents allow &quot;*&quot; as a statement's actions" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sqs_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_287] Ensure IAM policies does not allow credentials exposure" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sqs_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_290] Ensure IAM policies does not allow write access without constraints" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sqs_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_286] Ensure IAM policies does not allow privilege escalation" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sqs_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_355] Ensure no IAM policies documents allow &quot;*&quot; as a statement's resource for restrictable actions" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sqs_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_62] Ensure IAM policies that allow full &quot;*-*&quot; administrative privileges are not created" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sqs_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_288] Ensure IAM policies does not allow data exfiltration" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sqs_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_289] Ensure IAM policies does not allow permissions management / resource exposure without constraints" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sns_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_63] Ensure no IAM policies documents allow &quot;*&quot; as a statement's actions" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sns_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_287] Ensure IAM policies does not allow credentials exposure" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sns_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_290] Ensure IAM policies does not allow write access without constraints" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sns_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_286] Ensure IAM policies does not allow privilege escalation" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sns_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_355] Ensure no IAM policies documents allow &quot;*&quot; as a statement's resource for restrictable actions" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sns_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_62] Ensure IAM policies that allow full &quot;*-*&quot; administrative privileges are not created" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sns_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_288] Ensure IAM policies does not allow data exfiltration" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sns_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy_attachment.ec2_cloudwatch" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_61] Ensure AWS IAM policy does not allow assume role permission across all services" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role.lambda_role" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role.lambda_role" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_60] Ensure IAM role allows only specific services or principals to assume it" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role.lambda_role" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_289] Ensure IAM policies does not allow permissions management / resource exposure without constraints" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_vpc_execution" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_63] Ensure no IAM policies documents allow &quot;*&quot; as a statement's actions" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_vpc_execution" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_287] Ensure IAM policies does not allow credentials exposure" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_vpc_execution" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_290] Ensure IAM policies does not allow write access without constraints" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_vpc_execution" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_286] Ensure IAM policies does not allow privilege escalation" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_vpc_execution" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_355] Ensure no IAM policies documents allow &quot;*&quot; as a statement's resource for restrictable actions" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_vpc_execution" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_62] Ensure IAM policies that allow full &quot;*-*&quot; administrative privileges are not created" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_vpc_execution" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_288] Ensure IAM policies does not allow data exfiltration" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_vpc_execution" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_289] Ensure IAM policies does not allow permissions management / resource exposure without constraints" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sqs_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_63] Ensure no IAM policies documents allow &quot;*&quot; as a statement's actions" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sqs_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_287] Ensure IAM policies does not allow credentials exposure" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sqs_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_290] Ensure IAM policies does not allow write access without constraints" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sqs_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_286] Ensure IAM policies does not allow privilege escalation" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sqs_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_355] Ensure no IAM policies documents allow &quot;*&quot; as a statement's resource for restrictable actions" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sqs_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_62] Ensure IAM policies that allow full &quot;*-*&quot; administrative privileges are not created" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sqs_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_288] Ensure IAM policies does not allow data exfiltration" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sqs_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_289] Ensure IAM policies does not allow permissions management / resource exposure without constraints" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sns_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_63] Ensure no IAM policies documents allow &quot;*&quot; as a statement's actions" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sns_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_287] Ensure IAM policies does not allow credentials exposure" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sns_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_290] Ensure IAM policies does not allow write access without constraints" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sns_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_286] Ensure IAM policies does not allow privilege escalation" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sns_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_355] Ensure no IAM policies documents allow &quot;*&quot; as a statement's resource for restrictable actions" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sns_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_62] Ensure IAM policies that allow full &quot;*-*&quot; administrative privileges are not created" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sns_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_288] Ensure IAM policies does not allow data exfiltration" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sns_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_289] Ensure IAM policies does not allow permissions management / resource exposure without constraints" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_ses_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_63] Ensure no IAM policies documents allow &quot;*&quot; as a statement's actions" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_ses_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_287] Ensure IAM policies does not allow credentials exposure" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_ses_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_286] Ensure IAM policies does not allow privilege escalation" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_ses_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_62] Ensure IAM policies that allow full &quot;*-*&quot; administrative privileges are not created" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_ses_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_288] Ensure IAM policies does not allow data exfiltration" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_ses_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy_attachment.lambda_logs" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_115] Ensure that AWS Lambda function is configured for function-level concurrent execution limit" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.email_sender" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_45] Ensure no hard-coded secrets exist in lambda environment" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.email_sender" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_173] Check encryption settings for Lambda environmental variable" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.email_sender" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_116] Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.email_sender" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_363] Ensure Lambda Runtime is not deprecated" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.email_sender" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_117] Ensure that AWS Lambda function is configured inside a VPC" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.email_sender" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_50] X-Ray tracing is enabled for Lambda" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.email_sender" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_227] Ensure KMS key is enabled" classname="/tf/modules/lambda/main.tf.module.lambda.aws_kms_key.lambda" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_7] Ensure rotation for customer created CMKs is enabled" classname="/tf/modules/lambda/main.tf.module.lambda.aws_kms_key.lambda" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_33] Ensure KMS key policy does not contain wildcard (*) principal" classname="/tf/modules/lambda/main.tf.module.lambda.aws_kms_key.lambda" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_45] Ensure no hard-coded secrets exist in lambda environment" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.invoice_generator" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_363] Ensure Lambda Runtime is not deprecated" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.invoice_generator" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_117] Ensure that AWS Lambda function is configured inside a VPC" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.invoice_generator" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_364] Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_permission.allow_sns_email_sender" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_301] Ensure that AWS Lambda function is not publicly accessible" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_permission.allow_sns_email_sender" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_364] Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_permission.allow_sqs_invoice_generator" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_301] Ensure that AWS Lambda function is not publicly accessible" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_permission.allow_sqs_invoice_generator" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV_AWS_157] Ensure that RDS instances have Multi-AZ enabled" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_353] Ensure that RDS instances have performance insights enabled" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_17] Ensure all data stored in RDS is not publicly accessible" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_250] Ensure that RDS PostgreSQL instances use a non vulnerable version with the log_fdw extension (https://aws.amazon.com/security/security-bulletins/AWS-2022-004/)" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_129] Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_354] Ensure RDS Performance Insights are encrypted using KMS CMKs" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_211] Ensure RDS uses a modern CaCert" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_133] Ensure that RDS instances has backup policy" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_388] Ensure AWS Aurora PostgreSQL is not exposed to local file read vulnerability" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_161] Ensure RDS database has IAM authentication enabled" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_16] Ensure all data stored in the RDS is securely encrypted at rest" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_118] Ensure that enhanced monitoring is enabled for Amazon RDS instances" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_226] Ensure DB instance gets all minor upgrades automatically" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_227] Ensure KMS key is enabled" classname="/tf/modules/rds/main.tf.module.rds.aws_kms_key.rds" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_7] Ensure rotation for customer created CMKs is enabled" classname="/tf/modules/rds/main.tf.module.rds.aws_kms_key.rds" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_33] Ensure KMS key policy does not contain wildcard (*) principal" classname="/tf/modules/rds/main.tf.module.rds.aws_kms_key.rds" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_61] Ensure AWS IAM policy does not allow assume role permission across all services" classname="/tf/modules/rds/main.tf.module.rds.aws_iam_role.rds_monitoring" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="/tf/modules/rds/main.tf.module.rds.aws_iam_role.rds_monitoring" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_60] Ensure IAM role allows only specific services or principals to assume it" classname="/tf/modules/rds/main.tf.module.rds.aws_iam_role.rds_monitoring" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="/tf/modules/rds/main.tf.module.rds.aws_iam_role_policy_attachment.rds_monitoring" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_93] Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_54] Ensure S3 bucket has block public policy enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket_public_access_block.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_55] Ensure S3 bucket has ignore public ACLs enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket_public_access_block.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_53] Ensure S3 bucket has block public ACLS enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket_public_access_block.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_56] Ensure S3 bucket has 'restrict_public_buckets' enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket_public_access_block.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_93] Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket_policy.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_70] Ensure S3 bucket does not allow an action with any Principal" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket_policy.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_34] Ensure CloudFront distribution ViewerProtocolPolicy is set to HTTPS" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_305] Ensure CloudFront distribution has a default root object configured" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_216] Ensure CloudFront distribution is enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_93] Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_54] Ensure S3 bucket has block public policy enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket_public_access_block.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_55] Ensure S3 bucket has ignore public ACLs enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket_public_access_block.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_53] Ensure S3 bucket has block public ACLS enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket_public_access_block.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_56] Ensure S3 bucket has 'restrict_public_buckets' enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket_public_access_block.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_227] Ensure KMS key is enabled" classname="/tf/modules/sns/main.tf.module.sns.aws_kms_key.sns" file="/tf/modules/sns/main.tf"/>
		<testcase name="[NONE][CKV_AWS_7] Ensure rotation for customer created CMKs is enabled" classname="/tf/modules/sns/main.tf.module.sns.aws_kms_key.sns" file="/tf/modules/sns/main.tf"/>
		<testcase name="[NONE][CKV_AWS_33] Ensure KMS key policy does not contain wildcard (*) principal" classname="/tf/modules/sns/main.tf.module.sns.aws_kms_key.sns" file="/tf/modules/sns/main.tf"/>
		<testcase name="[NONE][CKV_AWS_26] Ensure all data stored in the SNS topic is encrypted" classname="/tf/modules/sns/main.tf.module.sns.aws_sns_topic.nueva_reserva" file="/tf/modules/sns/main.tf"/>
		<testcase name="[NONE][CKV_AWS_169] Ensure SNS topic policy is not public by only allowing specific services or principals to access it" classname="/tf/modules/sns/main.tf.module.sns.aws_sns_topic_policy.nueva_reserva_policy" file="/tf/modules/sns/main.tf"/>
		<testcase name="[NONE][CKV_AWS_385] Ensure AWS SNS topic policies do not allow cross-account access" classname="/tf/modules/sns/main.tf.module.sns.aws_sns_topic_policy.nueva_reserva_policy" file="/tf/modules/sns/main.tf"/>
		<testcase name="[NONE][CKV_AWS_227] Ensure KMS key is enabled" classname="/tf/modules/sqs/main.tf.module.sqs.aws_kms_key.sqs" file="/tf/modules/sqs/main.tf"/>
		<testcase name="[NONE][CKV_AWS_7] Ensure rotation for customer created CMKs is enabled" classname="/tf/modules/sqs/main.tf.module.sqs.aws_kms_key.sqs" file="/tf/modules/sqs/main.tf"/>
		<testcase name="[NONE][CKV_AWS_33] Ensure KMS key policy does not contain wildcard (*) principal" classname="/tf/modules/sqs/main.tf.module.sqs.aws_kms_key.sqs" file="/tf/modules/sqs/main.tf"/>
		<testcase name="[NONE][CKV_AWS_27] Ensure all data stored in the SQS queue is encrypted" classname="/tf/modules/sqs/main.tf.module.sqs.aws_sqs_queue.pagos_procesados" file="/tf/modules/sqs/main.tf"/>
		<testcase name="[NONE][CKV_AWS_168] Ensure SQS queue policy is not public by only allowing specific services or principals to access it" classname="/tf/modules/sqs/main.tf.module.sqs.aws_sqs_queue.pagos_procesados" file="/tf/modules/sqs/main.tf"/>
		<testcase name="[NONE][CKV_AWS_168] Ensure SQS queue policy is not public by only allowing specific services or principals to access it" classname="/tf/modules/sqs/main.tf.module.sqs.aws_sqs_queue.pagos_procesados_dlq" file="/tf/modules/sqs/main.tf"/>
		<testcase name="[NONE][CKV_AWS_168] Ensure SQS queue policy is not public by only allowing specific services or principals to access it" classname="/tf/modules/sqs/main.tf.module.sqs.aws_sqs_queue.emails" file="/tf/modules/sqs/main.tf"/>
		<testcase name="[NONE][CKV_AWS_168] Ensure SQS queue policy is not public by only allowing specific services or principals to access it" classname="/tf/modules/sqs/main.tf.module.sqs.aws_sqs_queue.emails_dlq" file="/tf/modules/sqs/main.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/tf/modules/vpc/main.tf.module.vpc.aws_subnet.public[0]" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/tf/modules/vpc/main.tf.module.vpc.aws_subnet.private[0]" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.alb" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.alb" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.alb" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.alb" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.ec2" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.ec2" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.ec2" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.ec2" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.rds" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.rds" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.rds" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.rds" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.rds" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.lambda" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.lambda" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.lambda" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.lambda" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.lambda" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/tf/modules/vpc/main.tf.module.vpc.aws_subnet.public[1]" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/tf/modules/vpc/main.tf.module.vpc.aws_subnet.private[1]" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_72] Ensure AWS CloudFront origin protocol policy enforces HTTPS-only" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_40] Ensure AWS IAM policy does not allow full IAM privileges" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sqs_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_40] Ensure AWS IAM policy does not allow full IAM privileges" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy.ec2_sns_policy" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_40] Ensure AWS IAM policy does not allow full IAM privileges" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_vpc_execution" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_40] Ensure AWS IAM policy does not allow full IAM privileges" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sqs_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_40] Ensure AWS IAM policy does not allow full IAM privileges" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_sns_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_40] Ensure AWS IAM policy does not allow full IAM privileges" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_ses_policy" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_30] Ensure Postgres RDS as aws_db_instance has Query Logging enabled" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_21] Ensure all data stored in the S3 bucket have versioning enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_57] S3 Bucket has an ACL defined which allows public WRITE access." classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket.alb_logs" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_57] S3 Bucket has an ACL defined which allows public WRITE access." classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_57] S3 Bucket has an ACL defined which allows public WRITE access." classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_46] Ensure AWS CloudFront Distribution with S3 have Origin Access set to enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_6] Ensure that S3 bucket has a Public Access block" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket.alb_logs" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_6] Ensure that S3 bucket has a Public Access block" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_6] Ensure that S3 bucket has a Public Access block" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_74] Ensure AWS Load Balancers use strong ciphers" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb_listener.http" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_20] S3 Bucket has an ACL defined which allows public READ access." classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket.alb_logs" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_20] S3 Bucket has an ACL defined which allows public READ access." classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_20] S3 Bucket has an ACL defined which allows public READ access." classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_19] Ensure that all EIP addresses allocated to a VPC are attached to EC2 instances" classname="/tf/modules/vpc/main.tf.module.vpc.aws_eip.nat[0]" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_19] Ensure that all EIP addresses allocated to a VPC are attached to EC2 instances" classname="/tf/modules/vpc/main.tf.module.vpc.aws_eip.nat[1]" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_76] Ensure AWS ALB attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb.main" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_75] Ensure no open CORS policy" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.email_sender" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_75] Ensure no open CORS policy" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.invoice_generator" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_44] Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic" classname="/tf/modules/vpc/main.tf.module.vpc.aws_route_table.public" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_44] Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic" classname="/tf/modules/vpc/main.tf.module.vpc.aws_route_table.private[0]" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_44] Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic" classname="/tf/modules/vpc/main.tf.module.vpc.aws_route_table.private[1]" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_54] Ensure AWS CloudFront distribution is using secure SSL protocols for HTTPS communication" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_19] Ensure all data stored in the S3 bucket is securely encrypted at rest" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket.alb_logs" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV_AWS_19] Ensure all data stored in the S3 bucket is securely encrypted at rest" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV_AWS_19] Ensure all data stored in the S3 bucket is securely encrypted at rest" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.frontend" file="/tf/modules/s3-cloudfront/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_73] Ensure AWS SQS uses CMK not AWS default keys for encryption" classname="/tf/modules/sqs/main.tf.module.sqs.aws_sqs_queue.pagos_procesados_dlq" file="/tf/modules/sqs/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_73] Ensure AWS SQS uses CMK not AWS default keys for encryption" classname="/tf/modules/sqs/main.tf.module.sqs.aws_sqs_queue.emails" file="/tf/modules/sqs/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_73] Ensure AWS SQS uses CMK not AWS default keys for encryption" classname="/tf/modules/sqs/main.tf.module.sqs.aws_sqs_queue.emails_dlq" file="/tf/modules/sqs/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role.ec2_role" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_iam_role_policy_attachment.ec2_cloudwatch" file="/tf/modules/ec2-monolith/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role.lambda_role" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy_attachment.lambda_logs" file="/tf/modules/lambda/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="/tf/modules/rds/main.tf.module.rds.aws_iam_role.rds_monitoring" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="/tf/modules/rds/main.tf.module.rds.aws_iam_role_policy_attachment.rds_monitoring" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_35] AWS NAT Gateways should be utilized for the default route" classname="/tf/modules/vpc/main.tf.module.vpc.aws_route_table.public" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_35] AWS NAT Gateways should be utilized for the default route" classname="/tf/modules/vpc/main.tf.module.vpc.aws_route_table.private[0]" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_35] AWS NAT Gateways should be utilized for the default route" classname="/tf/modules/vpc/main.tf.module.vpc.aws_route_table.private[1]" file="/tf/modules/vpc/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_60] Ensure RDS instance with copy tags to snapshots is enabled" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf"/>
		<testcase name="[NONE][CKV_AWS_150] Ensure that Load Balancer has deletion protection enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb.main" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure that Load Balancer has deletion protection enabled">
Resource: module.ec2_monolith.aws_lb.main
File: /tf/modules/ec2-monolith/main.tf: 40-63
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-150

		40 | resource &quot;aws_lb&quot; &quot;main&quot; {
		41 |   name_prefix        = substr(replace(var.project_name, &quot;-&quot;, &quot;&quot;), 0, 6)
		42 |   internal           = false
		43 |   load_balancer_type = &quot;application&quot;
		44 |   security_groups    = [var.alb_security_group_id]
		45 |   subnets            = var.public_subnets
		46 | 
		47 |   enable_deletion_protection = {
		48 |     default = false # dev
		49 |     prod    = true  # Establecer en tfvars para prod
		50 |   }
		51 | 
		52 |   tags = {
		53 |     Name = &quot;${var.project_name}-${var.environment}-alb&quot;
		54 |   }
		55 | 
		56 |   access_logs {
		57 |     bucket  = aws_s3_bucket.alb_logs.id
		58 |     prefix  = &quot;alb-logs&quot;
		59 |     enabled = true
		60 |   }
		61 | 
		62 |   drop_invalid_header_fields = true
		63 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_2] Ensure ALB protocol is HTTPS" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb_listener.http" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure ALB protocol is HTTPS">
Resource: module.ec2_monolith.aws_lb_listener.http
File: /tf/modules/ec2-monolith/main.tf: 91-100
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-29

		91  | resource &quot;aws_lb_listener&quot; &quot;http&quot; {
		92  |   load_balancer_arn = aws_lb.main.arn
		93  |   port              = &quot;80&quot;
		94  |   protocol          = &quot;HTTP&quot;
		95  | 
		96  |   default_action {
		97  |     type             = &quot;forward&quot;
		98  |     target_group_arn = aws_lb_target_group.monolith.arn
		99  |   }
		100 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_290] Ensure IAM policies does not allow write access without constraints" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_ses_policy" file="/tf/modules/lambda/main.tf">
			<failure type="failure" message="Ensure IAM policies does not allow write access without constraints">
Resource: module.lambda.aws_iam_role_policy.lambda_ses_policy
File: /tf/modules/lambda/main.tf: 86-103
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-290

		86  | resource &quot;aws_iam_role_policy&quot; &quot;lambda_ses_policy&quot; {
		87  |   name_prefix = &quot;${var.project_name}-lambda-ses-&quot;
		88  |   role        = aws_iam_role.lambda_role.id
		89  | 
		90  |   policy = jsonencode({
		91  |     Version = &quot;2012-10-17&quot;
		92  |     Statement = [
		93  |       {
		94  |         Effect = &quot;Allow&quot;
		95  |         Action = [
		96  |           &quot;ses:SendEmail&quot;,
		97  |           &quot;ses:SendRawEmail&quot;
		98  |         ]
		99  |         Resource = &quot;*&quot;
		100 |       }
		101 |     ]
		102 |   })
		103 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_355] Ensure no IAM policies documents allow &quot;*&quot; as a statement's resource for restrictable actions" classname="/tf/modules/lambda/main.tf.module.lambda.aws_iam_role_policy.lambda_ses_policy" file="/tf/modules/lambda/main.tf">
			<failure type="failure" message="Ensure no IAM policies documents allow &quot;*&quot; as a statement's resource for restrictable actions">
Resource: module.lambda.aws_iam_role_policy.lambda_ses_policy
File: /tf/modules/lambda/main.tf: 86-103
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-355

		86  | resource &quot;aws_iam_role_policy&quot; &quot;lambda_ses_policy&quot; {
		87  |   name_prefix = &quot;${var.project_name}-lambda-ses-&quot;
		88  |   role        = aws_iam_role.lambda_role.id
		89  | 
		90  |   policy = jsonencode({
		91  |     Version = &quot;2012-10-17&quot;
		92  |     Statement = [
		93  |       {
		94  |         Effect = &quot;Allow&quot;
		95  |         Action = [
		96  |           &quot;ses:SendEmail&quot;,
		97  |           &quot;ses:SendRawEmail&quot;
		98  |         ]
		99  |         Resource = &quot;*&quot;
		100 |       }
		101 |     ]
		102 |   })
		103 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_26] Ensure all data stored in the SNS topic is encrypted" classname="/tf/modules/lambda/main.tf.module.lambda.aws_sns_topic.lambda_dlq" file="/tf/modules/lambda/main.tf">
			<failure type="failure" message="Ensure all data stored in the SNS topic is encrypted">
Resource: module.lambda.aws_sns_topic.lambda_dlq
File: /tf/modules/lambda/main.tf: 116-121
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-15

		116 | resource &quot;aws_sns_topic&quot; &quot;lambda_dlq&quot; {
		117 |   name_prefix = &quot;${var.project_name}-lambda-dlq-&quot;
		118 |   tags = {
		119 |     Name = &quot;${var.project_name}-lambda-dlq&quot;
		120 |   }
		121 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_272] Ensure AWS Lambda function is configured to validate code-signing" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.email_sender" file="/tf/modules/lambda/main.tf">
			<failure type="failure" message="Ensure AWS Lambda function is configured to validate code-signing">
Resource: module.lambda.aws_lambda_function.email_sender
File: /tf/modules/lambda/main.tf: 123-159
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-272

		123 | resource &quot;aws_lambda_function&quot; &quot;email_sender&quot; {
		124 |   filename      = &quot;lambda_email_sender.zip&quot;
		125 |   function_name = &quot;${var.project_name}-${var.environment}-email-sender&quot;
		126 |   role          = aws_iam_role.lambda_role.arn
		127 |   handler       = &quot;index.handler&quot;
		128 |   runtime       = &quot;nodejs18.x&quot;
		129 |   timeout       = 30
		130 |   memory_size   = 256
		131 | 
		132 |   reserved_concurrent_executions = 100
		133 | 
		134 |   dead_letter_config {
		135 |     target_arn = aws_sns_topic.lambda_dlq.arn
		136 |   }
		137 | 
		138 |   vpc_config {
		139 |     subnet_ids         = var.private_subnets
		140 |     security_group_ids = [var.lambda_security_group_id]
		141 |   }
		142 | 
		143 |   environment {
		144 |     variables = {
		145 |       SES_REGION = &quot;us-east-1&quot;
		146 |     }
		147 |   }
		148 | 
		149 |   # KMS para env vars
		150 |   kms_key_arn = aws_kms_key.lambda.arn
		151 | 
		152 |   tracing_config {
		153 |     mode = &quot;Active&quot; # X-Ray tracing
		154 |   }
		155 | 
		156 |   tags = {
		157 |     Name = &quot;${var.project_name}-${var.environment}-email-sender&quot;
		158 |   }
		159 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_115] Ensure that AWS Lambda function is configured for function-level concurrent execution limit" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.invoice_generator" file="/tf/modules/lambda/main.tf">
			<failure type="failure" message="Ensure that AWS Lambda function is configured for function-level concurrent execution limit">
Resource: module.lambda.aws_lambda_function.invoice_generator
File: /tf/modules/lambda/main.tf: 171-188
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		171 | resource &quot;aws_lambda_function&quot; &quot;invoice_generator&quot; {
		172 |   filename      = &quot;lambda_invoice_generator.zip&quot;
		173 |   function_name = &quot;${var.project_name}-${var.environment}-invoice-generator&quot;
		174 |   role          = aws_iam_role.lambda_role.arn
		175 |   handler       = &quot;index.handler&quot;
		176 |   runtime       = &quot;nodejs18.x&quot;
		177 |   timeout       = 60
		178 |   memory_size   = 512
		179 | 
		180 |   vpc_config {
		181 |     subnet_ids         = var.private_subnets
		182 |     security_group_ids = [var.lambda_security_group_id]
		183 |   }
		184 | 
		185 |   tags = {
		186 |     Name = &quot;${var.project_name}-${var.environment}-invoice-generator&quot;
		187 |   }
		188 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_116] Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.invoice_generator" file="/tf/modules/lambda/main.tf">
			<failure type="failure" message="Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)">
Resource: module.lambda.aws_lambda_function.invoice_generator
File: /tf/modules/lambda/main.tf: 171-188
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		171 | resource &quot;aws_lambda_function&quot; &quot;invoice_generator&quot; {
		172 |   filename      = &quot;lambda_invoice_generator.zip&quot;
		173 |   function_name = &quot;${var.project_name}-${var.environment}-invoice-generator&quot;
		174 |   role          = aws_iam_role.lambda_role.arn
		175 |   handler       = &quot;index.handler&quot;
		176 |   runtime       = &quot;nodejs18.x&quot;
		177 |   timeout       = 60
		178 |   memory_size   = 512
		179 | 
		180 |   vpc_config {
		181 |     subnet_ids         = var.private_subnets
		182 |     security_group_ids = [var.lambda_security_group_id]
		183 |   }
		184 | 
		185 |   tags = {
		186 |     Name = &quot;${var.project_name}-${var.environment}-invoice-generator&quot;
		187 |   }
		188 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_272] Ensure AWS Lambda function is configured to validate code-signing" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.invoice_generator" file="/tf/modules/lambda/main.tf">
			<failure type="failure" message="Ensure AWS Lambda function is configured to validate code-signing">
Resource: module.lambda.aws_lambda_function.invoice_generator
File: /tf/modules/lambda/main.tf: 171-188
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-272

		171 | resource &quot;aws_lambda_function&quot; &quot;invoice_generator&quot; {
		172 |   filename      = &quot;lambda_invoice_generator.zip&quot;
		173 |   function_name = &quot;${var.project_name}-${var.environment}-invoice-generator&quot;
		174 |   role          = aws_iam_role.lambda_role.arn
		175 |   handler       = &quot;index.handler&quot;
		176 |   runtime       = &quot;nodejs18.x&quot;
		177 |   timeout       = 60
		178 |   memory_size   = 512
		179 | 
		180 |   vpc_config {
		181 |     subnet_ids         = var.private_subnets
		182 |     security_group_ids = [var.lambda_security_group_id]
		183 |   }
		184 | 
		185 |   tags = {
		186 |     Name = &quot;${var.project_name}-${var.environment}-invoice-generator&quot;
		187 |   }
		188 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_50] X-Ray tracing is enabled for Lambda" classname="/tf/modules/lambda/main.tf.module.lambda.aws_lambda_function.invoice_generator" file="/tf/modules/lambda/main.tf">
			<failure type="failure" message="X-Ray tracing is enabled for Lambda">
Resource: module.lambda.aws_lambda_function.invoice_generator
File: /tf/modules/lambda/main.tf: 171-188
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-4

		171 | resource &quot;aws_lambda_function&quot; &quot;invoice_generator&quot; {
		172 |   filename      = &quot;lambda_invoice_generator.zip&quot;
		173 |   function_name = &quot;${var.project_name}-${var.environment}-invoice-generator&quot;
		174 |   role          = aws_iam_role.lambda_role.arn
		175 |   handler       = &quot;index.handler&quot;
		176 |   runtime       = &quot;nodejs18.x&quot;
		177 |   timeout       = 60
		178 |   memory_size   = 512
		179 | 
		180 |   vpc_config {
		181 |     subnet_ids         = var.private_subnets
		182 |     security_group_ids = [var.lambda_security_group_id]
		183 |   }
		184 | 
		185 |   tags = {
		186 |     Name = &quot;${var.project_name}-${var.environment}-invoice-generator&quot;
		187 |   }
		188 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_293] Ensure that AWS database instances have deletion protection enabled" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf">
			<failure type="failure" message="Ensure that AWS database instances have deletion protection enabled">
Resource: module.rds.aws_db_instance.main
File: /tf/modules/rds/main.tf: 13-60
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-293

		13 | resource &quot;aws_db_instance&quot; &quot;main&quot; {
		14 |   identifier        = &quot;${var.project_name}-${var.environment}-db&quot;
		15 |   engine            = &quot;postgres&quot;
		16 |   engine_version    = &quot;15.4&quot;
		17 |   instance_class    = var.db_instance_class
		18 |   allocated_storage = 20
		19 |   storage_type      = &quot;gp3&quot;
		20 |   storage_encrypted = true
		21 |   
		22 |   deletion_protection      = var.environment == &quot;prod&quot; ? true : false
		23 |   iam_database_authentication_enabled = true
		24 |   auto_minor_version_upgrade = true
		25 |   copy_tags_to_snapshot   = true
		26 | 
		27 |   db_name  = var.db_name
		28 |   username = var.db_username
		29 |   password = var.db_password
		30 | 
		31 |   # Performance Insights
		32 |   performance_insights_enabled          = true
		33 |   performance_insights_retention_period = 7
		34 |   performance_insights_kms_key_id       = aws_kms_key.rds.arn
		35 | 
		36 |   db_parameter_group_name = aws_db_parameter_group.main.name
		37 | 
		38 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		39 |   vpc_security_group_ids = [var.rds_security_group]
		40 | 
		41 |   # Multi-AZ para alta disponibilidad
		42 |   multi_az = true
		43 | 
		44 |   # Backups automáticos
		45 |   backup_retention_period = 7
		46 |   backup_window           = &quot;03:00-04:00&quot;
		47 |   maintenance_window      = &quot;mon:04:00-mon:05:00&quot;
		48 | 
		49 |   # Performance y logs
		50 |   enabled_cloudwatch_logs_exports = [&quot;postgresql&quot;]
		51 |   monitoring_interval             = 60
		52 |   monitoring_role_arn             = aws_iam_role.rds_monitoring.arn
		53 | 
		54 |   skip_final_snapshot       = false
		55 |   final_snapshot_identifier = &quot;${var.project_name}-${var.environment}-final-snapshot-${formatdate(&quot;YYYY-MM-DD-hhmm&quot;, timestamp())}&quot;
		56 | 
		57 |   tags = {
		58 |     Name = &quot;${var.project_name}-${var.environment}-rds&quot;
		59 |   }
		60 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_86] Ensure CloudFront distribution has Access Logging enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure CloudFront distribution has Access Logging enabled">
Resource: module.frontend.aws_cloudfront_distribution.frontend
File: /tf/modules/s3-cloudfront/main.tf: 81-184
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-20

		Code lines for this resource are too many. Please use IDE of your choice to review the file.</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_310] Ensure CloudFront distributions should have origin failover configured" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure CloudFront distributions should have origin failover configured">
Resource: module.frontend.aws_cloudfront_distribution.frontend
File: /tf/modules/s3-cloudfront/main.tf: 81-184
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-310

		Code lines for this resource are too many. Please use IDE of your choice to review the file.</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_68] CloudFront Distribution should have WAF enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="CloudFront Distribution should have WAF enabled">
Resource: module.frontend.aws_cloudfront_distribution.frontend
File: /tf/modules/s3-cloudfront/main.tf: 81-184
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-27

		Code lines for this resource are too many. Please use IDE of your choice to review the file.</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_174] Verify CloudFront Distribution Viewer Certificate is using TLS v1.2 or higher" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Verify CloudFront Distribution Viewer Certificate is using TLS v1.2 or higher">
Resource: module.frontend.aws_cloudfront_distribution.frontend
File: /tf/modules/s3-cloudfront/main.tf: 81-184
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-networking-63

		Code lines for this resource are too many. Please use IDE of your choice to review the file.</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_374] Ensure AWS CloudFront web distribution has geo restriction enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure AWS CloudFront web distribution has geo restriction enabled">
Resource: module.frontend.aws_cloudfront_distribution.frontend
File: /tf/modules/s3-cloudfront/main.tf: 81-184
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-374

		Code lines for this resource are too many. Please use IDE of your choice to review the file.</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_26] Ensure all data stored in the SNS topic is encrypted" classname="/tf/modules/sns/main.tf.module.sns.aws_sns_topic.reserva_cancelada" file="/tf/modules/sns/main.tf">
			<failure type="failure" message="Ensure all data stored in the SNS topic is encrypted">
Resource: module.sns.aws_sns_topic.reserva_cancelada
File: /tf/modules/sns/main.tf: 26-33
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-15

		26 | resource &quot;aws_sns_topic&quot; &quot;reserva_cancelada&quot; {
		27 |   name_prefix  = &quot;${var.project_name}-reserva-cancelada-&quot;
		28 |   display_name = &quot;Reserva Cancelada&quot;
		29 | 
		30 |   tags = {
		31 |     Name = &quot;${var.project_name}-${var.environment}-reserva-cancelada&quot;
		32 |   }
		33 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_26] Ensure all data stored in the SNS topic is encrypted" classname="/tf/modules/sns/main.tf.module.sns.aws_sns_topic.pago_completado" file="/tf/modules/sns/main.tf">
			<failure type="failure" message="Ensure all data stored in the SNS topic is encrypted">
Resource: module.sns.aws_sns_topic.pago_completado
File: /tf/modules/sns/main.tf: 36-43
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-15

		36 | resource &quot;aws_sns_topic&quot; &quot;pago_completado&quot; {
		37 |   name_prefix  = &quot;${var.project_name}-pago-completado-&quot;
		38 |   display_name = &quot;Pago Completado&quot;
		39 | 
		40 |   tags = {
		41 |     Name = &quot;${var.project_name}-${var.environment}-pago-completado&quot;
		42 |   }
		43 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_27] Ensure all data stored in the SQS queue is encrypted" classname="/tf/modules/sqs/main.tf.module.sqs.aws_sqs_queue.pagos_procesados_dlq" file="/tf/modules/sqs/main.tf">
			<failure type="failure" message="Ensure all data stored in the SQS queue is encrypted">
Resource: module.sqs.aws_sqs_queue.pagos_procesados_dlq
File: /tf/modules/sqs/main.tf: 33-40
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-16-encrypt-sqs-queue

		33 | resource &quot;aws_sqs_queue&quot; &quot;pagos_procesados_dlq&quot; {
		34 |   name_prefix               = &quot;${var.project_name}-pagos-dlq-&quot;
		35 |   message_retention_seconds = 1209600 # 14 días
		36 | 
		37 |   tags = {
		38 |     Name = &quot;${var.project_name}-${var.environment}-pagos-dlq&quot;
		39 |   }
		40 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_27] Ensure all data stored in the SQS queue is encrypted" classname="/tf/modules/sqs/main.tf.module.sqs.aws_sqs_queue.emails" file="/tf/modules/sqs/main.tf">
			<failure type="failure" message="Ensure all data stored in the SQS queue is encrypted">
Resource: module.sqs.aws_sqs_queue.emails
File: /tf/modules/sqs/main.tf: 44-58
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-16-encrypt-sqs-queue

		44 | resource &quot;aws_sqs_queue&quot; &quot;emails&quot; {
		45 |   name_prefix                = &quot;${var.project_name}-emails-&quot;
		46 |   delay_seconds              = 0
		47 |   message_retention_seconds  = 604800 # 7 días
		48 |   visibility_timeout_seconds = 60     # 1 minuto
		49 | 
		50 |   redrive_policy = jsonencode({
		51 |     deadLetterTargetArn = aws_sqs_queue.emails_dlq.arn
		52 |     maxReceiveCount     = 5
		53 |   })
		54 | 
		55 |   tags = {
		56 |     Name = &quot;${var.project_name}-${var.environment}-emails&quot;
		57 |   }
		58 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_27] Ensure all data stored in the SQS queue is encrypted" classname="/tf/modules/sqs/main.tf.module.sqs.aws_sqs_queue.emails_dlq" file="/tf/modules/sqs/main.tf">
			<failure type="failure" message="Ensure all data stored in the SQS queue is encrypted">
Resource: module.sqs.aws_sqs_queue.emails_dlq
File: /tf/modules/sqs/main.tf: 60-67
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-16-encrypt-sqs-queue

		60 | resource &quot;aws_sqs_queue&quot; &quot;emails_dlq&quot; {
		61 |   name_prefix               = &quot;${var.project_name}-emails-dlq-&quot;
		62 |   message_retention_seconds = 604800
		63 | 
		64 |   tags = {
		65 |     Name = &quot;${var.project_name}-${var.environment}-emails-dlq&quot;
		66 |   }
		67 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.alb" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: module.vpc.aws_security_group.alb
File: /tf/modules/vpc/main.tf: 139-174
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		139 | resource &quot;aws_security_group&quot; &quot;alb&quot; {
		140 |   name_prefix = &quot;${var.project_name}-alb-&quot;
		141 |   description = &quot;Security group for Application Load Balancer&quot;
		142 |   vpc_id      = aws_vpc.main.id
		143 | 
		144 |   ingress {
		145 |     description = &quot;HTTP from internet&quot;
		146 |     from_port   = 80
		147 |     to_port     = 80
		148 |     protocol    = &quot;tcp&quot;
		149 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		150 |   }
		151 | 
		152 |   ingress {
		153 |     description = &quot;HTTPS from internet&quot;
		154 |     from_port   = 443
		155 |     to_port     = 443
		156 |     protocol    = &quot;tcp&quot;
		157 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		158 |   }
		159 | 
		160 |   egress {
		161 |     description = &quot;Allow all outbound traffic&quot;
		162 |     from_port   = 0
		163 |     to_port     = 0
		164 |     protocol    = &quot;-1&quot;
		165 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		166 |   }
		167 | 
		168 |   tags = merge(
		169 |     var.tags,
		170 |     {
		171 |       Name = &quot;${var.project_name}-${var.environment}-alb-sg&quot;
		172 |     }
		173 |   )
		174 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.alb" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure no security groups allow ingress from 0.0.0.0:0 to port 80">
Resource: module.vpc.aws_security_group.alb
File: /tf/modules/vpc/main.tf: 139-174
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80

		139 | resource &quot;aws_security_group&quot; &quot;alb&quot; {
		140 |   name_prefix = &quot;${var.project_name}-alb-&quot;
		141 |   description = &quot;Security group for Application Load Balancer&quot;
		142 |   vpc_id      = aws_vpc.main.id
		143 | 
		144 |   ingress {
		145 |     description = &quot;HTTP from internet&quot;
		146 |     from_port   = 80
		147 |     to_port     = 80
		148 |     protocol    = &quot;tcp&quot;
		149 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		150 |   }
		151 | 
		152 |   ingress {
		153 |     description = &quot;HTTPS from internet&quot;
		154 |     from_port   = 443
		155 |     to_port     = 443
		156 |     protocol    = &quot;tcp&quot;
		157 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		158 |   }
		159 | 
		160 |   egress {
		161 |     description = &quot;Allow all outbound traffic&quot;
		162 |     from_port   = 0
		163 |     to_port     = 0
		164 |     protocol    = &quot;-1&quot;
		165 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		166 |   }
		167 | 
		168 |   tags = merge(
		169 |     var.tags,
		170 |     {
		171 |       Name = &quot;${var.project_name}-${var.environment}-alb-sg&quot;
		172 |     }
		173 |   )
		174 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.ec2" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure no security groups allow ingress from 0.0.0.0:0 to port 22">
Resource: module.vpc.aws_security_group.ec2
File: /tf/modules/vpc/main.tf: 177-212
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security

		177 | resource &quot;aws_security_group&quot; &quot;ec2&quot; {
		178 |   name_prefix = &quot;${var.project_name}-ec2-&quot;
		179 |   description = &quot;Security group for EC2 instances (monolith)&quot;
		180 |   vpc_id      = aws_vpc.main.id
		181 | 
		182 |   ingress {
		183 |     description     = &quot;From ALB on port 3000&quot;
		184 |     from_port       = 3000
		185 |     to_port         = 3000
		186 |     protocol        = &quot;tcp&quot;
		187 |     security_groups = [aws_security_group.alb.id]
		188 |   }
		189 | 
		190 |   ingress {
		191 |     description = &quot;SSH for debugging (restrict in prod)&quot;
		192 |     from_port   = 22
		193 |     to_port     = 22
		194 |     protocol    = &quot;tcp&quot;
		195 |     cidr_blocks = [&quot;0.0.0.0/0&quot;] # CAMBIAR EN PRODUCCIÓN
		196 |   }
		197 | 
		198 |   egress {
		199 |     description = &quot;Allow all outbound traffic&quot;
		200 |     from_port   = 0
		201 |     to_port     = 0
		202 |     protocol    = &quot;-1&quot;
		203 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		204 |   }
		205 | 
		206 |   tags = merge(
		207 |     var.tags,
		208 |     {
		209 |       Name = &quot;${var.project_name}-${var.environment}-ec2-sg&quot;
		210 |     }
		211 |   )
		212 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.ec2" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: module.vpc.aws_security_group.ec2
File: /tf/modules/vpc/main.tf: 177-212
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		177 | resource &quot;aws_security_group&quot; &quot;ec2&quot; {
		178 |   name_prefix = &quot;${var.project_name}-ec2-&quot;
		179 |   description = &quot;Security group for EC2 instances (monolith)&quot;
		180 |   vpc_id      = aws_vpc.main.id
		181 | 
		182 |   ingress {
		183 |     description     = &quot;From ALB on port 3000&quot;
		184 |     from_port       = 3000
		185 |     to_port         = 3000
		186 |     protocol        = &quot;tcp&quot;
		187 |     security_groups = [aws_security_group.alb.id]
		188 |   }
		189 | 
		190 |   ingress {
		191 |     description = &quot;SSH for debugging (restrict in prod)&quot;
		192 |     from_port   = 22
		193 |     to_port     = 22
		194 |     protocol    = &quot;tcp&quot;
		195 |     cidr_blocks = [&quot;0.0.0.0/0&quot;] # CAMBIAR EN PRODUCCIÓN
		196 |   }
		197 | 
		198 |   egress {
		199 |     description = &quot;Allow all outbound traffic&quot;
		200 |     from_port   = 0
		201 |     to_port     = 0
		202 |     protocol    = &quot;-1&quot;
		203 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		204 |   }
		205 | 
		206 |   tags = merge(
		207 |     var.tags,
		208 |     {
		209 |       Name = &quot;${var.project_name}-${var.environment}-ec2-sg&quot;
		210 |     }
		211 |   )
		212 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.rds" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: module.vpc.aws_security_group.rds
File: /tf/modules/vpc/main.tf: 215-250
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		215 | resource &quot;aws_security_group&quot; &quot;rds&quot; {
		216 |   name_prefix = &quot;${var.project_name}-rds-&quot;
		217 |   description = &quot;Security group for RDS&quot;
		218 |   vpc_id      = aws_vpc.main.id
		219 | 
		220 |   ingress {
		221 |     description     = &quot;PostgreSQL from EC2&quot;
		222 |     from_port       = 5432
		223 |     to_port         = 5432
		224 |     protocol        = &quot;tcp&quot;
		225 |     security_groups = [aws_security_group.ec2.id]
		226 |   }
		227 | 
		228 |   ingress {
		229 |     description     = &quot;PostgreSQL from Lambda&quot;
		230 |     from_port       = 5432
		231 |     to_port         = 5432
		232 |     protocol        = &quot;tcp&quot;
		233 |     security_groups = [aws_security_group.lambda.id]
		234 |   }
		235 | 
		236 |   egress {
		237 |     description = &quot;Allow all outbound traffic&quot;
		238 |     from_port   = 0
		239 |     to_port     = 0
		240 |     protocol    = &quot;-1&quot;
		241 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		242 |   }
		243 | 
		244 |   tags = merge(
		245 |     var.tags,
		246 |     {
		247 |       Name = &quot;${var.project_name}-${var.environment}-rds-sg&quot;
		248 |     }
		249 |   )
		250 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.lambda" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: module.vpc.aws_security_group.lambda
File: /tf/modules/vpc/main.tf: 253-272
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		253 | resource &quot;aws_security_group&quot; &quot;lambda&quot; {
		254 |   name_prefix = &quot;${var.project_name}-lambda-&quot;
		255 |   description = &quot;Security group for Lambda functions&quot;
		256 |   vpc_id      = aws_vpc.main.id
		257 | 
		258 |   egress {
		259 |     description = &quot;Allow all outbound traffic&quot;
		260 |     from_port   = 0
		261 |     to_port     = 0
		262 |     protocol    = &quot;-1&quot;
		263 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		264 |   }
		265 | 
		266 |   tags = merge(
		267 |     var.tags,
		268 |     {
		269 |       Name = &quot;${var.project_name}-${var.environment}-lambda-sg&quot;
		270 |     }
		271 |   )
		272 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.alb" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure that Security Groups are attached to another resource">
Resource: module.vpc.aws_security_group.alb
File: /tf/modules/vpc/main.tf: 139-174
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		139 | resource &quot;aws_security_group&quot; &quot;alb&quot; {
		140 |   name_prefix = &quot;${var.project_name}-alb-&quot;
		141 |   description = &quot;Security group for Application Load Balancer&quot;
		142 |   vpc_id      = aws_vpc.main.id
		143 | 
		144 |   ingress {
		145 |     description = &quot;HTTP from internet&quot;
		146 |     from_port   = 80
		147 |     to_port     = 80
		148 |     protocol    = &quot;tcp&quot;
		149 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		150 |   }
		151 | 
		152 |   ingress {
		153 |     description = &quot;HTTPS from internet&quot;
		154 |     from_port   = 443
		155 |     to_port     = 443
		156 |     protocol    = &quot;tcp&quot;
		157 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		158 |   }
		159 | 
		160 |   egress {
		161 |     description = &quot;Allow all outbound traffic&quot;
		162 |     from_port   = 0
		163 |     to_port     = 0
		164 |     protocol    = &quot;-1&quot;
		165 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		166 |   }
		167 | 
		168 |   tags = merge(
		169 |     var.tags,
		170 |     {
		171 |       Name = &quot;${var.project_name}-${var.environment}-alb-sg&quot;
		172 |     }
		173 |   )
		174 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.ec2" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure that Security Groups are attached to another resource">
Resource: module.vpc.aws_security_group.ec2
File: /tf/modules/vpc/main.tf: 177-212
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		177 | resource &quot;aws_security_group&quot; &quot;ec2&quot; {
		178 |   name_prefix = &quot;${var.project_name}-ec2-&quot;
		179 |   description = &quot;Security group for EC2 instances (monolith)&quot;
		180 |   vpc_id      = aws_vpc.main.id
		181 | 
		182 |   ingress {
		183 |     description     = &quot;From ALB on port 3000&quot;
		184 |     from_port       = 3000
		185 |     to_port         = 3000
		186 |     protocol        = &quot;tcp&quot;
		187 |     security_groups = [aws_security_group.alb.id]
		188 |   }
		189 | 
		190 |   ingress {
		191 |     description = &quot;SSH for debugging (restrict in prod)&quot;
		192 |     from_port   = 22
		193 |     to_port     = 22
		194 |     protocol    = &quot;tcp&quot;
		195 |     cidr_blocks = [&quot;0.0.0.0/0&quot;] # CAMBIAR EN PRODUCCIÓN
		196 |   }
		197 | 
		198 |   egress {
		199 |     description = &quot;Allow all outbound traffic&quot;
		200 |     from_port   = 0
		201 |     to_port     = 0
		202 |     protocol    = &quot;-1&quot;
		203 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		204 |   }
		205 | 
		206 |   tags = merge(
		207 |     var.tags,
		208 |     {
		209 |       Name = &quot;${var.project_name}-${var.environment}-ec2-sg&quot;
		210 |     }
		211 |   )
		212 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.rds" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure that Security Groups are attached to another resource">
Resource: module.vpc.aws_security_group.rds
File: /tf/modules/vpc/main.tf: 215-250
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		215 | resource &quot;aws_security_group&quot; &quot;rds&quot; {
		216 |   name_prefix = &quot;${var.project_name}-rds-&quot;
		217 |   description = &quot;Security group for RDS&quot;
		218 |   vpc_id      = aws_vpc.main.id
		219 | 
		220 |   ingress {
		221 |     description     = &quot;PostgreSQL from EC2&quot;
		222 |     from_port       = 5432
		223 |     to_port         = 5432
		224 |     protocol        = &quot;tcp&quot;
		225 |     security_groups = [aws_security_group.ec2.id]
		226 |   }
		227 | 
		228 |   ingress {
		229 |     description     = &quot;PostgreSQL from Lambda&quot;
		230 |     from_port       = 5432
		231 |     to_port         = 5432
		232 |     protocol        = &quot;tcp&quot;
		233 |     security_groups = [aws_security_group.lambda.id]
		234 |   }
		235 | 
		236 |   egress {
		237 |     description = &quot;Allow all outbound traffic&quot;
		238 |     from_port   = 0
		239 |     to_port     = 0
		240 |     protocol    = &quot;-1&quot;
		241 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		242 |   }
		243 | 
		244 |   tags = merge(
		245 |     var.tags,
		246 |     {
		247 |       Name = &quot;${var.project_name}-${var.environment}-rds-sg&quot;
		248 |     }
		249 |   )
		250 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="/tf/modules/vpc/main.tf.module.vpc.aws_security_group.lambda" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure that Security Groups are attached to another resource">
Resource: module.vpc.aws_security_group.lambda
File: /tf/modules/vpc/main.tf: 253-272
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		253 | resource &quot;aws_security_group&quot; &quot;lambda&quot; {
		254 |   name_prefix = &quot;${var.project_name}-lambda-&quot;
		255 |   description = &quot;Security group for Lambda functions&quot;
		256 |   vpc_id      = aws_vpc.main.id
		257 | 
		258 |   egress {
		259 |     description = &quot;Allow all outbound traffic&quot;
		260 |     from_port   = 0
		261 |     to_port     = 0
		262 |     protocol    = &quot;-1&quot;
		263 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		264 |   }
		265 | 
		266 |   tags = merge(
		267 |     var.tags,
		268 |     {
		269 |       Name = &quot;${var.project_name}-${var.environment}-lambda-sg&quot;
		270 |     }
		271 |   )
		272 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_62] Ensure S3 buckets should have event notifications enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket.alb_logs" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure S3 buckets should have event notifications enabled">
Resource: module.ec2_monolith.aws_s3_bucket.alb_logs
File: /tf/modules/ec2-monolith/main.tf: 6-12
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62

		6  | resource &quot;aws_s3_bucket&quot; &quot;alb_logs&quot; {
		7  |   bucket_prefix = &quot;${var.project_name}-alb-logs-&quot;
		8  | 
		9  |   tags = {
		10 |     Name = &quot;${var.project_name}-alb-logs&quot;
		11 |   }
		12 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_62] Ensure S3 buckets should have event notifications enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure S3 buckets should have event notifications enabled">
Resource: module.frontend.aws_s3_bucket.frontend
File: /tf/modules/s3-cloudfront/main.tf: 4-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62

		4  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		5  |   bucket_prefix = &quot;${var.project_name}-frontend-&quot;
		6  | 
		7  |   tags = {
		8  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		9  |     Environment = var.environment
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_62] Ensure S3 buckets should have event notifications enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure S3 buckets should have event notifications enabled">
Resource: module.frontend.aws_s3_bucket.cloudfront_logs
File: /tf/modules/s3-cloudfront/main.tf: 189-195
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62

		189 | resource &quot;aws_s3_bucket&quot; &quot;cloudfront_logs&quot; {
		190 |   bucket_prefix = &quot;${var.project_name}-cf-logs-&quot;
		191 | 
		192 |   tags = {
		193 |     Name = &quot;${var.project_name}-${var.environment}-cf-logs&quot;
		194 |   }
		195 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_32] Ensure CloudFront distribution has a response headers policy attached" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure CloudFront distribution has a response headers policy attached">
Resource: module.frontend.aws_cloudfront_distribution.frontend
File: /tf/modules/s3-cloudfront/main.tf: 81-184
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-networking-65

		Code lines for this resource are too many. Please use IDE of your choice to review the file.</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_21] Ensure all data stored in the S3 bucket have versioning enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket.alb_logs" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure all data stored in the S3 bucket have versioning enabled">
Resource: module.ec2_monolith.aws_s3_bucket.alb_logs
File: /tf/modules/ec2-monolith/main.tf: 6-12
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning

		6  | resource &quot;aws_s3_bucket&quot; &quot;alb_logs&quot; {
		7  |   bucket_prefix = &quot;${var.project_name}-alb-logs-&quot;
		8  | 
		9  |   tags = {
		10 |     Name = &quot;${var.project_name}-alb-logs&quot;
		11 |   }
		12 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_21] Ensure all data stored in the S3 bucket have versioning enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure all data stored in the S3 bucket have versioning enabled">
Resource: module.frontend.aws_s3_bucket.cloudfront_logs
File: /tf/modules/s3-cloudfront/main.tf: 189-195
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning

		189 | resource &quot;aws_s3_bucket&quot; &quot;cloudfront_logs&quot; {
		190 |   bucket_prefix = &quot;${var.project_name}-cf-logs-&quot;
		191 | 
		192 |   tags = {
		193 |     Name = &quot;${var.project_name}-${var.environment}-cf-logs&quot;
		194 |   }
		195 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_28] Ensure public facing ALB are protected by WAF" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb.main" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure public facing ALB are protected by WAF">
Resource: module.ec2_monolith.aws_lb.main
File: /tf/modules/ec2-monolith/main.tf: 40-63
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-public-facing-alb-are-protected-by-waf

		40 | resource &quot;aws_lb&quot; &quot;main&quot; {
		41 |   name_prefix        = substr(replace(var.project_name, &quot;-&quot;, &quot;&quot;), 0, 6)
		42 |   internal           = false
		43 |   load_balancer_type = &quot;application&quot;
		44 |   security_groups    = [var.alb_security_group_id]
		45 |   subnets            = var.public_subnets
		46 | 
		47 |   enable_deletion_protection = {
		48 |     default = false # dev
		49 |     prod    = true  # Establecer en tfvars para prod
		50 |   }
		51 | 
		52 |   tags = {
		53 |     Name = &quot;${var.project_name}-${var.environment}-alb&quot;
		54 |   }
		55 | 
		56 |   access_logs {
		57 |     bucket  = aws_s3_bucket.alb_logs.id
		58 |     prefix  = &quot;alb-logs&quot;
		59 |     enabled = true
		60 |   }
		61 | 
		62 |   drop_invalid_header_fields = true
		63 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_144] Ensure that S3 bucket has cross-region replication enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket.alb_logs" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure that S3 bucket has cross-region replication enabled">
Resource: module.ec2_monolith.aws_s3_bucket.alb_logs
File: /tf/modules/ec2-monolith/main.tf: 6-12
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled

		6  | resource &quot;aws_s3_bucket&quot; &quot;alb_logs&quot; {
		7  |   bucket_prefix = &quot;${var.project_name}-alb-logs-&quot;
		8  | 
		9  |   tags = {
		10 |     Name = &quot;${var.project_name}-alb-logs&quot;
		11 |   }
		12 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_144] Ensure that S3 bucket has cross-region replication enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure that S3 bucket has cross-region replication enabled">
Resource: module.frontend.aws_s3_bucket.frontend
File: /tf/modules/s3-cloudfront/main.tf: 4-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled

		4  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		5  |   bucket_prefix = &quot;${var.project_name}-frontend-&quot;
		6  | 
		7  |   tags = {
		8  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		9  |     Environment = var.environment
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_144] Ensure that S3 bucket has cross-region replication enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure that S3 bucket has cross-region replication enabled">
Resource: module.frontend.aws_s3_bucket.cloudfront_logs
File: /tf/modules/s3-cloudfront/main.tf: 189-195
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled

		189 | resource &quot;aws_s3_bucket&quot; &quot;cloudfront_logs&quot; {
		190 |   bucket_prefix = &quot;${var.project_name}-cf-logs-&quot;
		191 | 
		192 |   tags = {
		193 |     Name = &quot;${var.project_name}-${var.environment}-cf-logs&quot;
		194 |   }
		195 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_42] Ensure AWS CloudFront distribution uses custom SSL certificate" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure AWS CloudFront distribution uses custom SSL certificate">
Resource: module.frontend.aws_cloudfront_distribution.frontend
File: /tf/modules/s3-cloudfront/main.tf: 81-184
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-cloudfront-distribution-uses-custom-ssl-certificate

		Code lines for this resource are too many. Please use IDE of your choice to review the file.</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_11] Ensure VPC flow logging is enabled in all VPCs" classname="/tf/modules/vpc/main.tf.module.vpc.aws_vpc.main" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure VPC flow logging is enabled in all VPCs">
Resource: module.vpc.aws_vpc.main
File: /tf/modules/vpc/main.tf: 2-13
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-9-enable-vpc-flow-logging

		2  | resource &quot;aws_vpc&quot; &quot;main&quot; {
		3  |   cidr_block           = var.vpc_cidr
		4  |   enable_dns_hostnames = true
		5  |   enable_dns_support   = true
		6  | 
		7  |   tags = merge(
		8  |     var.tags,
		9  |     {
		10 |       Name = &quot;${var.project_name}-${var.environment}-vpc&quot;
		11 |     }
		12 |   )
		13 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_20] Ensure that ALB redirects HTTP requests into HTTPS ones" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb.main" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure that ALB redirects HTTP requests into HTTPS ones">
Resource: module.ec2_monolith.aws_lb.main
File: /tf/modules/ec2-monolith/main.tf: 40-63
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-alb-redirects-http-requests-into-https-ones

		40 | resource &quot;aws_lb&quot; &quot;main&quot; {
		41 |   name_prefix        = substr(replace(var.project_name, &quot;-&quot;, &quot;&quot;), 0, 6)
		42 |   internal           = false
		43 |   load_balancer_type = &quot;application&quot;
		44 |   security_groups    = [var.alb_security_group_id]
		45 |   subnets            = var.public_subnets
		46 | 
		47 |   enable_deletion_protection = {
		48 |     default = false # dev
		49 |     prod    = true  # Establecer en tfvars para prod
		50 |   }
		51 | 
		52 |   tags = {
		53 |     Name = &quot;${var.project_name}-${var.environment}-alb&quot;
		54 |   }
		55 | 
		56 |   access_logs {
		57 |     bucket  = aws_s3_bucket.alb_logs.id
		58 |     prefix  = &quot;alb-logs&quot;
		59 |     enabled = true
		60 |   }
		61 | 
		62 |   drop_invalid_header_fields = true
		63 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_12] Ensure the default security group of every VPC restricts all traffic" classname="/tf/modules/vpc/main.tf.module.vpc.aws_vpc.main" file="/tf/modules/vpc/main.tf">
			<failure type="failure" message="Ensure the default security group of every VPC restricts all traffic">
Resource: module.vpc.aws_vpc.main
File: /tf/modules/vpc/main.tf: 2-13
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-4

		2  | resource &quot;aws_vpc&quot; &quot;main&quot; {
		3  |   cidr_block           = var.vpc_cidr
		4  |   enable_dns_hostnames = true
		5  |   enable_dns_support   = true
		6  | 
		7  |   tags = merge(
		8  |     var.tags,
		9  |     {
		10 |       Name = &quot;${var.project_name}-${var.environment}-vpc&quot;
		11 |     }
		12 |   )
		13 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_103] Ensure that load balancer is using at least TLS 1.2" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb_listener.http" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure that load balancer is using at least TLS 1.2">
Resource: module.ec2_monolith.aws_lb_listener.http
File: /tf/modules/ec2-monolith/main.tf: 91-100
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-43

		91  | resource &quot;aws_lb_listener&quot; &quot;http&quot; {
		92  |   load_balancer_arn = aws_lb.main.arn
		93  |   port              = &quot;80&quot;
		94  |   protocol          = &quot;HTTP&quot;
		95  | 
		96  |   default_action {
		97  |     type             = &quot;forward&quot;
		98  |     target_group_arn = aws_lb_target_group.monolith.arn
		99  |   }
		100 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_64] Ensure KMS key Policy is defined" classname="/tf/modules/lambda/main.tf.module.lambda.aws_kms_key.lambda" file="/tf/modules/lambda/main.tf">
			<failure type="failure" message="Ensure KMS key Policy is defined">
Resource: module.lambda.aws_kms_key.lambda
File: /tf/modules/lambda/main.tf: 162-166
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-64

		162 | resource &quot;aws_kms_key&quot; &quot;lambda&quot; {
		163 |   description             = &quot;KMS key for Lambda environment variables&quot;
		164 |   deletion_window_in_days = 10
		165 |   enable_key_rotation     = true
		166 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_64] Ensure KMS key Policy is defined" classname="/tf/modules/rds/main.tf.module.rds.aws_kms_key.rds" file="/tf/modules/rds/main.tf">
			<failure type="failure" message="Ensure KMS key Policy is defined">
Resource: module.rds.aws_kms_key.rds
File: /tf/modules/rds/main.tf: 81-85
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-64

		81 | resource &quot;aws_kms_key&quot; &quot;rds&quot; {
		82 |   description             = &quot;KMS key for RDS Performance Insights&quot;
		83 |   deletion_window_in_days = 10
		84 |   enable_key_rotation     = true
		85 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_64] Ensure KMS key Policy is defined" classname="/tf/modules/sns/main.tf.module.sns.aws_kms_key.sns" file="/tf/modules/sns/main.tf">
			<failure type="failure" message="Ensure KMS key Policy is defined">
Resource: module.sns.aws_kms_key.sns
File: /tf/modules/sns/main.tf: 5-9
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-64

		5 | resource &quot;aws_kms_key&quot; &quot;sns&quot; {
		6 |   description             = &quot;KMS key for SNS topics&quot;
		7 |   deletion_window_in_days = 10
		8 |   enable_key_rotation     = true
		9 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_64] Ensure KMS key Policy is defined" classname="/tf/modules/sqs/main.tf.module.sqs.aws_kms_key.sqs" file="/tf/modules/sqs/main.tf">
			<failure type="failure" message="Ensure KMS key Policy is defined">
Resource: module.sqs.aws_kms_key.sqs
File: /tf/modules/sqs/main.tf: 5-9
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-64

		5 | resource &quot;aws_kms_key&quot; &quot;sqs&quot; {
		6 |   description             = &quot;KMS key for SQS queues&quot;
		7 |   deletion_window_in_days = 10
		8 |   enable_key_rotation     = true
		9 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_69] Ensure AWS RDS database instance configured with encryption in transit" classname="/tf/modules/rds/main.tf.module.rds.aws_db_instance.main" file="/tf/modules/rds/main.tf">
			<failure type="failure" message="Ensure AWS RDS database instance configured with encryption in transit">
Resource: module.rds.aws_db_instance.main
File: /tf/modules/rds/main.tf: 13-60
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-2-69

		13 | resource &quot;aws_db_instance&quot; &quot;main&quot; {
		14 |   identifier        = &quot;${var.project_name}-${var.environment}-db&quot;
		15 |   engine            = &quot;postgres&quot;
		16 |   engine_version    = &quot;15.4&quot;
		17 |   instance_class    = var.db_instance_class
		18 |   allocated_storage = 20
		19 |   storage_type      = &quot;gp3&quot;
		20 |   storage_encrypted = true
		21 |   
		22 |   deletion_protection      = var.environment == &quot;prod&quot; ? true : false
		23 |   iam_database_authentication_enabled = true
		24 |   auto_minor_version_upgrade = true
		25 |   copy_tags_to_snapshot   = true
		26 | 
		27 |   db_name  = var.db_name
		28 |   username = var.db_username
		29 |   password = var.db_password
		30 | 
		31 |   # Performance Insights
		32 |   performance_insights_enabled          = true
		33 |   performance_insights_retention_period = 7
		34 |   performance_insights_kms_key_id       = aws_kms_key.rds.arn
		35 | 
		36 |   db_parameter_group_name = aws_db_parameter_group.main.name
		37 | 
		38 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		39 |   vpc_security_group_ids = [var.rds_security_group]
		40 | 
		41 |   # Multi-AZ para alta disponibilidad
		42 |   multi_az = true
		43 | 
		44 |   # Backups automáticos
		45 |   backup_retention_period = 7
		46 |   backup_window           = &quot;03:00-04:00&quot;
		47 |   maintenance_window      = &quot;mon:04:00-mon:05:00&quot;
		48 | 
		49 |   # Performance y logs
		50 |   enabled_cloudwatch_logs_exports = [&quot;postgresql&quot;]
		51 |   monitoring_interval             = 60
		52 |   monitoring_role_arn             = aws_iam_role.rds_monitoring.arn
		53 | 
		54 |   skip_final_snapshot       = false
		55 |   final_snapshot_identifier = &quot;${var.project_name}-${var.environment}-final-snapshot-${formatdate(&quot;YYYY-MM-DD-hhmm&quot;, timestamp())}&quot;
		56 | 
		57 |   tags = {
		58 |     Name = &quot;${var.project_name}-${var.environment}-rds&quot;
		59 |   }
		60 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_47] Ensure AWS CloudFront attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_cloudfront_distribution.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure AWS CloudFront attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability">
Resource: module.frontend.aws_cloudfront_distribution.frontend
File: /tf/modules/s3-cloudfront/main.tf: 81-184
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-47

		Code lines for this resource are too many. Please use IDE of your choice to review the file.</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_378] Ensure AWS Load Balancer doesn't use HTTP protocol" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_lb_target_group.monolith" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure AWS Load Balancer doesn't use HTTP protocol">
Resource: module.ec2_monolith.aws_lb_target_group.monolith
File: /tf/modules/ec2-monolith/main.tf: 68-86
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-378

		68 | resource &quot;aws_lb_target_group&quot; &quot;monolith&quot; {
		69 |   name_prefix = substr(replace(var.project_name, &quot;-&quot;, &quot;&quot;), 0, 6)
		70 |   port        = 3000
		71 |   protocol    = &quot;HTTP&quot;
		72 |   vpc_id      = var.vpc_id
		73 | 
		74 |   health_check {
		75 |     healthy_threshold   = 2
		76 |     unhealthy_threshold = 2
		77 |     timeout             = 5
		78 |     interval            = 30
		79 |     path                = &quot;/health&quot;
		80 |     matcher             = &quot;200&quot;
		81 |   }
		82 | 
		83 |   tags = {
		84 |     Name = &quot;${var.project_name}-${var.environment}-tg&quot;
		85 |   }
		86 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_145] Ensure that S3 buckets are encrypted with KMS by default" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket.alb_logs" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure that S3 buckets are encrypted with KMS by default">
Resource: module.ec2_monolith.aws_s3_bucket.alb_logs
File: /tf/modules/ec2-monolith/main.tf: 6-12
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		6  | resource &quot;aws_s3_bucket&quot; &quot;alb_logs&quot; {
		7  |   bucket_prefix = &quot;${var.project_name}-alb-logs-&quot;
		8  | 
		9  |   tags = {
		10 |     Name = &quot;${var.project_name}-alb-logs&quot;
		11 |   }
		12 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_145] Ensure that S3 buckets are encrypted with KMS by default" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure that S3 buckets are encrypted with KMS by default">
Resource: module.frontend.aws_s3_bucket.frontend
File: /tf/modules/s3-cloudfront/main.tf: 4-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		4  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		5  |   bucket_prefix = &quot;${var.project_name}-frontend-&quot;
		6  | 
		7  |   tags = {
		8  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		9  |     Environment = var.environment
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_145] Ensure that S3 buckets are encrypted with KMS by default" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure that S3 buckets are encrypted with KMS by default">
Resource: module.frontend.aws_s3_bucket.cloudfront_logs
File: /tf/modules/s3-cloudfront/main.tf: 189-195
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		189 | resource &quot;aws_s3_bucket&quot; &quot;cloudfront_logs&quot; {
		190 |   bucket_prefix = &quot;${var.project_name}-cf-logs-&quot;
		191 | 
		192 |   tags = {
		193 |     Name = &quot;${var.project_name}-${var.environment}-cf-logs&quot;
		194 |   }
		195 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_18] Ensure the S3 bucket has access logging enabled" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket.alb_logs" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure the S3 bucket has access logging enabled">
Resource: module.ec2_monolith.aws_s3_bucket.alb_logs
File: /tf/modules/ec2-monolith/main.tf: 6-12
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging

		6  | resource &quot;aws_s3_bucket&quot; &quot;alb_logs&quot; {
		7  |   bucket_prefix = &quot;${var.project_name}-alb-logs-&quot;
		8  | 
		9  |   tags = {
		10 |     Name = &quot;${var.project_name}-alb-logs&quot;
		11 |   }
		12 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_18] Ensure the S3 bucket has access logging enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure the S3 bucket has access logging enabled">
Resource: module.frontend.aws_s3_bucket.frontend
File: /tf/modules/s3-cloudfront/main.tf: 4-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging

		4  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		5  |   bucket_prefix = &quot;${var.project_name}-frontend-&quot;
		6  | 
		7  |   tags = {
		8  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		9  |     Environment = var.environment
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_18] Ensure the S3 bucket has access logging enabled" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure the S3 bucket has access logging enabled">
Resource: module.frontend.aws_s3_bucket.cloudfront_logs
File: /tf/modules/s3-cloudfront/main.tf: 189-195
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging

		189 | resource &quot;aws_s3_bucket&quot; &quot;cloudfront_logs&quot; {
		190 |   bucket_prefix = &quot;${var.project_name}-cf-logs-&quot;
		191 | 
		192 |   tags = {
		193 |     Name = &quot;${var.project_name}-${var.environment}-cf-logs&quot;
		194 |   }
		195 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_61] Ensure that an S3 bucket has a lifecycle configuration" classname="/tf/modules/ec2-monolith/main.tf.module.ec2_monolith.aws_s3_bucket.alb_logs" file="/tf/modules/ec2-monolith/main.tf">
			<failure type="failure" message="Ensure that an S3 bucket has a lifecycle configuration">
Resource: module.ec2_monolith.aws_s3_bucket.alb_logs
File: /tf/modules/ec2-monolith/main.tf: 6-12
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61

		6  | resource &quot;aws_s3_bucket&quot; &quot;alb_logs&quot; {
		7  |   bucket_prefix = &quot;${var.project_name}-alb-logs-&quot;
		8  | 
		9  |   tags = {
		10 |     Name = &quot;${var.project_name}-alb-logs&quot;
		11 |   }
		12 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_61] Ensure that an S3 bucket has a lifecycle configuration" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.frontend" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure that an S3 bucket has a lifecycle configuration">
Resource: module.frontend.aws_s3_bucket.frontend
File: /tf/modules/s3-cloudfront/main.tf: 4-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61

		4  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		5  |   bucket_prefix = &quot;${var.project_name}-frontend-&quot;
		6  | 
		7  |   tags = {
		8  |     Name        = &quot;${var.project_name}-${var.environment}-frontend&quot;
		9  |     Environment = var.environment
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_61] Ensure that an S3 bucket has a lifecycle configuration" classname="/tf/modules/s3-cloudfront/main.tf.module.frontend.aws_s3_bucket.cloudfront_logs" file="/tf/modules/s3-cloudfront/main.tf">
			<failure type="failure" message="Ensure that an S3 bucket has a lifecycle configuration">
Resource: module.frontend.aws_s3_bucket.cloudfront_logs
File: /tf/modules/s3-cloudfront/main.tf: 189-195
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61

		189 | resource &quot;aws_s3_bucket&quot; &quot;cloudfront_logs&quot; {
		190 |   bucket_prefix = &quot;${var.project_name}-cf-logs-&quot;
		191 | 
		192 |   tags = {
		193 |     Name = &quot;${var.project_name}-${var.environment}-cf-logs&quot;
		194 |   }
		195 | }
</failure>
		</testcase>
	</testsuite>
</testsuites>
